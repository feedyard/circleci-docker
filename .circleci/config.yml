version: 2.1

orbs:
  docker-publish: feedyard/orb-docker-publish@dev:0.1.0-rc1

jobs:

  build-and-publish:
    executor: docker-publish/circleci-base
    steps:
      - docker-publish/publish

  release:
    executor: docker-publish/circleci-base
    steps:
    - docker-publish/release

workflows:
  publish-and-release-docker-image:
    jobs:
    - docker-publish/publish:
        filters:
          branches:
            only: master
          tags:
            ignore: /.*/
    - docker-publish/release:
#        requires:
#        - build-and-publish
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /.*/








#executors:
#  circleci-base:
#    working_directory: ~/circleci-remote-docker
#    docker:
#      - image: quay.io/feedyard/circleci-base-agent
#    environment:
#      LIBRARY: quay.io/feedyard
#      CONTAINER_NAME: circleci-remote-docker
#      VERSION: 3.8
#      BASH_ENV: local.env
#
#jobs:
#  build:
#    executor: circleci-base
#    steps:
#      - checkout
#      - setup_remote_docker
#      - run:
#          name: confirm Docker
#          command: docker info
#      - run:
#          name: decrypt secrets
#          command: invoke dec
#      - run:
#          name: build image
#          command: docker build -t $LIBRARY/$CONTAINER_NAME:latest .
#      - run:
#          name: tag with build version
#          command: docker tag $LIBRARY/$CONTAINER_NAME:latest $LIBRARY/$CONTAINER_NAME:$VERSION.$CIRCLE_BUILD_NUM
#      - run:
#          name: configuration tests
#          command: |
#            set -euo pipefail
#            inspec exec --no-distinct-exit profiles/cis-docker
#            CID="$(docker run -it -d --entrypoint ash $LIBRARY/$CONTAINER_NAME:latest)"
#            inspec exec profiles/$CONTAINER_NAME/ -t docker://$CID
#            docker rm -f $CID
#      - deploy:
#          name: deploy to quay.io
#          command: |
#            echo "$FEEDYARD_CIRCLECI_QUAYIO_DEPLOY_USER_TOKEN" | docker login -u $FEEDYARD_CIRCLECI_QUAYIO_DEPLOY_USER --password-stdin quay.io
#            docker push $LIBRARY/$CONTAINER_NAME:$VERSION.$CIRCLE_BUILD_NUM
#            docker push $LIBRARY/$CONTAINER_NAME:latest


  #echo "$MY_PASSWORD" | docker login --username foo --password-stdin